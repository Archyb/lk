{"ast":null,"code":"/**\n * virtual-core\n *\n * Copyright (c) TanStack\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction memo(getDeps, fn, opts) {\n  var deps = [];\n  var result;\n  return function () {\n    var depTime;\n    if (opts.key && opts.debug != null && opts.debug()) depTime = Date.now();\n    var newDeps = getDeps();\n    var depsChanged = newDeps.length !== deps.length || newDeps.some(function (dep, index) {\n      return deps[index] !== dep;\n    });\n    if (!depsChanged) {\n      return result;\n    }\n    deps = newDeps;\n    var resultTime;\n    if (opts.key && opts.debug != null && opts.debug()) resultTime = Date.now();\n    result = fn.apply(void 0, newDeps);\n    opts == null ? void 0 : opts.onChange == null ? void 0 : opts.onChange(result);\n    if (opts.key && opts.debug != null && opts.debug()) {\n      var depEndTime = Math.round((Date.now() - depTime) * 100) / 100;\n      var resultEndTime = Math.round((Date.now() - resultTime) * 100) / 100;\n      var resultFpsPercentage = resultEndTime / 16;\n      var pad = function pad(str, num) {\n        str = String(str);\n        while (str.length < num) {\n          str = ' ' + str;\n        }\n        return str;\n      };\n      console.info(\"%c\\u23F1 \" + pad(resultEndTime, 5) + \" /\" + pad(depEndTime, 5) + \" ms\", \"\\n            font-size: .6rem;\\n            font-weight: bold;\\n            color: hsl(\" + Math.max(0, Math.min(120 - 120 * resultFpsPercentage, 120)) + \"deg 100% 31%);\", opts == null ? void 0 : opts.key);\n    }\n    return result;\n  };\n}\nexport { memo };","map":{"version":3,"mappings":";;;;;;;;;;AAIO,SAASA,IAAI,CAClBC,OAAyB,EACzBC,EAA6C,EAC7CC,IAIC,EACc;EACf,IAAIC,IAAW,GAAG,EAAE;EACpB,IAAIC,MAA2B;EAE/B,OAAO,YAAM;IACX,IAAIC,OAAe;IACnB,IAAIH,IAAI,CAACI,GAAG,IAAIJ,IAAI,CAACK,KAAK,IAAVL,YAAI,CAACK,KAAK,EAAI,EAAEF,OAAO,GAAGG,IAAI,CAACC,GAAG,EAAE;IAEpD,IAAMC,OAAO,GAAGV,OAAO,EAAE;IAEzB,IAAMW,WAAW,GACfD,OAAO,CAACE,MAAM,KAAKT,IAAI,CAACS,MAAM,IAC9BF,OAAO,CAACG,IAAI,CAAC,UAACC,GAAQ,EAAEC,KAAa;MAAA,OAAKZ,IAAI,CAACY,KAAK,CAAC,KAAKD,GAAG;KAAC;IAEhE,IAAI,CAACH,WAAW,EAAE;MAChB,OAAOP,MAAM;IACf;IAEAD,IAAI,GAAGO,OAAO;IAEd,IAAIM,UAAkB;IACtB,IAAId,IAAI,CAACI,GAAG,IAAIJ,IAAI,CAACK,KAAK,IAAVL,YAAI,CAACK,KAAK,EAAI,EAAES,UAAU,GAAGR,IAAI,CAACC,GAAG,EAAE;IAEvDL,MAAM,GAAGH,EAAE,CAAIS,qBAAO,CAAC;IACvBR,IAAI,oBAAJA,IAAI,CAAEe,QAAQ,oBAAdf,IAAI,CAAEe,QAAQ,CAAGb,MAAM,CAAC;IAExB,IAAIF,IAAI,CAACI,GAAG,IAAIJ,IAAI,CAACK,KAAK,YAAVL,IAAI,CAACK,KAAK,EAAI,EAAE;MAC9B,IAAMW,UAAU,GAAGC,IAAI,CAACC,KAAK,CAAC,CAACZ,IAAI,CAACC,GAAG,EAAE,GAAGJ,OAAQ,IAAI,GAAG,CAAC,GAAG,GAAG;MAClE,IAAMgB,aAAa,GAAGF,IAAI,CAACC,KAAK,CAAC,CAACZ,IAAI,CAACC,GAAG,EAAE,GAAGO,UAAW,IAAI,GAAG,CAAC,GAAG,GAAG;MACxE,IAAMM,mBAAmB,GAAGD,aAAa,GAAG,EAAE;MAE9C,IAAME,GAAG,GAAG,SAANA,GAAG,CAAIC,GAAoB,EAAEC,GAAW,EAAK;QACjDD,GAAG,GAAGE,MAAM,CAACF,GAAG,CAAC;QACjB,OAAOA,GAAG,CAACZ,MAAM,GAAGa,GAAG,EAAE;UACvBD,GAAG,GAAG,GAAG,GAAGA,GAAG;QACjB;QACA,OAAOA,GAAG;OACX;MAEDG,OAAO,CAACC,IAAI,eACHL,GAAG,CAACF,aAAa,EAAE,CAAC,CAAC,UAAKE,GAAG,CAACL,UAAU,EAAE,CAAC,CAAC,GAIlCC,wGAAI,CAACU,GAAG,CACnB,CAAC,EACDV,IAAI,CAACW,GAAG,CAAC,GAAG,GAAG,GAAG,GAAGR,mBAAmB,EAAE,GAAG,CAAC,CAC/C,GACLpB,sBAAI,oBAAJA,IAAI,CAAEI,GAAG,CACV;IACH;IAEA,OAAOF,MAAM;GACd;AACH","names":["memo","getDeps","fn","opts","deps","result","depTime","key","debug","Date","now","newDeps","depsChanged","length","some","dep","index","resultTime","onChange","depEndTime","Math","round","resultEndTime","resultFpsPercentage","pad","str","num","String","console","info","max","min"],"sources":["/Users/arthur/DEV/buildLookup-dockerDev/front/node_modules/@tanstack/virtual-core/src/utils.ts"],"sourcesContent":["export type NoInfer<A extends any> = [A][A extends any ? 0 : never]\n\nexport type PartialKeys<T, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>\n\nexport function memo<TDeps extends readonly any[], TResult>(\n  getDeps: () => [...TDeps],\n  fn: (...args: NoInfer<[...TDeps]>) => TResult,\n  opts: {\n    key: any\n    debug?: () => any\n    onChange?: (result: TResult) => void\n  },\n): () => TResult {\n  let deps: any[] = []\n  let result: TResult | undefined\n\n  return () => {\n    let depTime: number\n    if (opts.key && opts.debug?.()) depTime = Date.now()\n\n    const newDeps = getDeps()\n\n    const depsChanged =\n      newDeps.length !== deps.length ||\n      newDeps.some((dep: any, index: number) => deps[index] !== dep)\n\n    if (!depsChanged) {\n      return result!\n    }\n\n    deps = newDeps\n\n    let resultTime: number\n    if (opts.key && opts.debug?.()) resultTime = Date.now()\n\n    result = fn(...newDeps)\n    opts?.onChange?.(result)\n\n    if (opts.key && opts.debug?.()) {\n      const depEndTime = Math.round((Date.now() - depTime!) * 100) / 100\n      const resultEndTime = Math.round((Date.now() - resultTime!) * 100) / 100\n      const resultFpsPercentage = resultEndTime / 16\n\n      const pad = (str: number | string, num: number) => {\n        str = String(str)\n        while (str.length < num) {\n          str = ' ' + str\n        }\n        return str\n      }\n\n      console.info(\n        `%c⏱ ${pad(resultEndTime, 5)} /${pad(depEndTime, 5)} ms`,\n        `\n            font-size: .6rem;\n            font-weight: bold;\n            color: hsl(${Math.max(\n              0,\n              Math.min(120 - 120 * resultFpsPercentage, 120),\n            )}deg 100% 31%);`,\n        opts?.key,\n      )\n    }\n\n    return result!\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}