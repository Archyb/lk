{"version":3,"file":"index.development.js","sources":["../../src/utils.ts","../../src/index.ts"],"sourcesContent":["export type NoInfer<A extends any> = [A][A extends any ? 0 : never]\n\nexport type PartialKeys<T, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>\n\nexport function memo<TDeps extends readonly any[], TResult>(\n  getDeps: () => [...TDeps],\n  fn: (...args: NoInfer<[...TDeps]>) => TResult,\n  opts: {\n    key: any\n    debug?: () => any\n    onChange?: (result: TResult) => void\n  },\n): () => TResult {\n  let deps: any[] = []\n  let result: TResult | undefined\n\n  return () => {\n    let depTime: number\n    if (opts.key && opts.debug?.()) depTime = Date.now()\n\n    const newDeps = getDeps()\n\n    const depsChanged =\n      newDeps.length !== deps.length ||\n      newDeps.some((dep: any, index: number) => deps[index] !== dep)\n\n    if (!depsChanged) {\n      return result!\n    }\n\n    deps = newDeps\n\n    let resultTime: number\n    if (opts.key && opts.debug?.()) resultTime = Date.now()\n\n    result = fn(...newDeps)\n    opts?.onChange?.(result)\n\n    if (opts.key && opts.debug?.()) {\n      const depEndTime = Math.round((Date.now() - depTime!) * 100) / 100\n      const resultEndTime = Math.round((Date.now() - resultTime!) * 100) / 100\n      const resultFpsPercentage = resultEndTime / 16\n\n      const pad = (str: number | string, num: number) => {\n        str = String(str)\n        while (str.length < num) {\n          str = ' ' + str\n        }\n        return str\n      }\n\n      console.info(\n        `%c⏱ ${pad(resultEndTime, 5)} /${pad(depEndTime, 5)} ms`,\n        `\n            font-size: .6rem;\n            font-weight: bold;\n            color: hsl(${Math.max(\n              0,\n              Math.min(120 - 120 * resultFpsPercentage, 120),\n            )}deg 100% 31%);`,\n        opts?.key,\n      )\n    }\n\n    return result!\n  }\n}\n","import { memo } from './utils'\n\nexport * from './utils'\n\n//\n\ntype ScrollAlignment = 'start' | 'center' | 'end' | 'auto'\n\ntype ScrollBehavior = 'auto' | 'smooth'\n\nexport interface ScrollToOptions {\n  align?: ScrollAlignment\n  behavior?: ScrollBehavior\n}\n\ntype ScrollToOffsetOptions = ScrollToOptions\n\ntype ScrollToIndexOptions = ScrollToOptions\n\nexport interface Range {\n  startIndex: number\n  endIndex: number\n  overscan: number\n  count: number\n}\n\ntype Key = number | string\n\nexport interface VirtualItem {\n  key: Key\n  index: number\n  start: number\n  end: number\n  size: number\n}\n\ninterface Rect {\n  width: number\n  height: number\n}\n\n//\n\nexport const defaultKeyExtractor = (index: number) => index\n\nexport const defaultRangeExtractor = (range: Range) => {\n  const start = Math.max(range.startIndex - range.overscan, 0)\n  const end = Math.min(range.endIndex + range.overscan, range.count - 1)\n\n  const arr = []\n\n  for (let i = start; i <= end; i++) {\n    arr.push(i)\n  }\n\n  return arr\n}\n\nconst memoRectCallback = (\n  instance: Virtualizer<any, any>,\n  cb: (rect: Rect) => void,\n) => {\n  let prev: Rect = { height: -1, width: -1 }\n\n  return (rect: Rect) => {\n    if (\n      instance.options.horizontal\n        ? rect.width !== prev.width\n        : rect.height !== prev.height\n    ) {\n      cb(rect)\n    }\n\n    prev = rect\n  }\n}\n\nexport const observeElementRect = (\n  instance: Virtualizer<any, any>,\n  cb: (rect: Rect) => void,\n) => {\n  const observer = new ResizeObserver((entries) => {\n    cb({\n      width: entries[0]?.contentRect.width as number,\n      height: entries[0]?.contentRect.height as number,\n    })\n  })\n\n  if (!instance.scrollElement) {\n    return\n  }\n\n  cb(instance.scrollElement.getBoundingClientRect())\n\n  observer.observe(instance.scrollElement)\n\n  return () => {\n    observer.unobserve(instance.scrollElement)\n  }\n}\n\nexport const observeWindowRect = (\n  instance: Virtualizer<any, any>,\n  cb: (rect: Rect) => void,\n) => {\n  const memoizedCallback = memoRectCallback(instance, cb)\n  const onResize = () =>\n    memoizedCallback({\n      width: instance.scrollElement.innerWidth,\n      height: instance.scrollElement.innerHeight,\n    })\n\n  if (!instance.scrollElement) {\n    return\n  }\n\n  onResize()\n\n  instance.scrollElement.addEventListener('resize', onResize, {\n    capture: false,\n    passive: true,\n  })\n\n  return () => {\n    instance.scrollElement.removeEventListener('resize', onResize)\n  }\n}\n\ntype ObserverMode = 'element' | 'window'\n\nconst scrollProps = {\n  element: ['scrollLeft', 'scrollTop'],\n  window: ['scrollX', 'scrollY'],\n} as const\n\nconst createOffsetObserver = (mode: ObserverMode) => {\n  return (instance: Virtualizer<any, any>, cb: (offset: number) => void) => {\n    if (!instance.scrollElement) {\n      return\n    }\n\n    const propX = scrollProps[mode][0]\n    const propY = scrollProps[mode][1]\n\n    let prevX: number = instance.scrollElement[propX]\n    let prevY: number = instance.scrollElement[propY]\n\n    const scroll = () => {\n      const offset =\n        instance.scrollElement[instance.options.horizontal ? propX : propY]\n\n      cb(Math.max(0, offset - instance.options.scrollMargin))\n    }\n\n    scroll()\n\n    const onScroll = (e: Event) => {\n      const target = e.currentTarget as HTMLElement & Window\n      const scrollX = target[propX]\n      const scrollY = target[propY]\n\n      if (instance.options.horizontal ? prevX - scrollX : prevY - scrollY) {\n        scroll()\n      }\n\n      prevX = scrollX\n      prevY = scrollY\n    }\n\n    instance.scrollElement.addEventListener('scroll', onScroll, {\n      capture: false,\n      passive: true,\n    })\n\n    return () => {\n      instance.scrollElement.removeEventListener('scroll', onScroll)\n    }\n  }\n}\n\nexport const observeElementOffset = createOffsetObserver('element')\nexport const observeWindowOffset = createOffsetObserver('window')\n\nexport const measureElement = <TItemElement extends Element>(\n  element: TItemElement,\n  instance: Virtualizer<any, TItemElement>,\n) => {\n  return Math.round(\n    element.getBoundingClientRect()[\n      instance.options.horizontal ? 'width' : 'height'\n    ],\n  )\n}\n\nexport const windowScroll = <T extends Window>(\n  offset: number,\n  {\n    adjustments,\n    behavior,\n    sync,\n  }: { adjustments?: number; behavior?: ScrollBehavior; sync: boolean },\n  instance: Virtualizer<T, any>,\n) => {\n  const toOffset =\n    (sync ? offset : offset + instance.options.scrollMargin) +\n    (adjustments ?? 0)\n\n  instance.scrollElement?.scrollTo?.({\n    [instance.options.horizontal ? 'left' : 'top']: toOffset,\n    behavior,\n  })\n}\n\nexport const elementScroll = <T extends Element>(\n  offset: number,\n  {\n    adjustments,\n    behavior,\n    sync,\n  }: { adjustments?: number; behavior?: ScrollBehavior; sync: boolean },\n  instance: Virtualizer<T, any>,\n) => {\n  const toOffset =\n    (sync ? offset : offset + instance.options.scrollMargin) +\n    (adjustments ?? 0)\n\n  instance.scrollElement?.scrollTo?.({\n    [instance.options.horizontal ? 'left' : 'top']: toOffset,\n    behavior,\n  })\n}\n\nexport interface VirtualizerOptions<\n  TScrollElement extends Element | Window,\n  TItemElement extends Element,\n> {\n  // Required from the user\n  count: number\n  getScrollElement: () => TScrollElement | null\n  estimateSize: (index: number) => number\n\n  // Required from the framework adapter (but can be overridden)\n  scrollToFn: (\n    offset: number,\n    options: { adjustments?: number; behavior?: ScrollBehavior; sync: boolean },\n    instance: Virtualizer<TScrollElement, TItemElement>,\n  ) => void\n  observeElementRect: (\n    instance: Virtualizer<TScrollElement, TItemElement>,\n    cb: (rect: Rect) => void,\n  ) => void | (() => void)\n  observeElementOffset: (\n    instance: Virtualizer<TScrollElement, TItemElement>,\n    cb: (offset: number) => void,\n  ) => void | (() => void)\n\n  // Optional\n  debug?: any\n  initialRect?: Rect\n  onChange?: (instance: Virtualizer<TScrollElement, TItemElement>) => void\n  measureElement?: (\n    el: TItemElement,\n    instance: Virtualizer<TScrollElement, TItemElement>,\n  ) => number\n  overscan?: number\n  horizontal?: boolean\n  paddingStart?: number\n  paddingEnd?: number\n  scrollPaddingStart?: number\n  scrollPaddingEnd?: number\n  initialOffset?: number\n  getItemKey?: (index: number) => Key\n  rangeExtractor?: (range: Range) => number[]\n  scrollMargin?: number\n  scrollingDelay?: number\n  indexAttribute?: string\n}\n\nexport class Virtualizer<\n  TScrollElement extends Element | Window,\n  TItemElement extends Element,\n> {\n  private unsubs: (void | (() => void))[] = []\n  options!: Required<VirtualizerOptions<TScrollElement, TItemElement>>\n  scrollElement: TScrollElement | null = null\n  isScrolling: boolean = false\n  private isScrollingTimeoutId: ReturnType<typeof setTimeout> | null = null\n  measurementsCache: VirtualItem[] = []\n  private itemMeasurementsCache: Record<Key, number> = {}\n  private pendingMeasuredCacheIndexes: number[] = []\n  private scrollRect: Rect\n  scrollOffset: number\n  private scrollAdjustments: number = 0\n  private measureElementCache: Record<Key, TItemElement> = {}\n  private pendingScrollToIndexCallback: (() => void) | null = null\n  private getResizeObserver = (() => {\n    let _ro: ResizeObserver | null = null\n\n    return () => {\n      if (_ro) {\n        return _ro\n      } else if (typeof ResizeObserver !== 'undefined') {\n        return (_ro = new ResizeObserver((entries) => {\n          entries.forEach((entry) => {\n            this._measureElement(entry.target as TItemElement, false)\n          })\n        }))\n      } else {\n        return null\n      }\n    }\n  })()\n  range: { startIndex: number; endIndex: number } = {\n    startIndex: 0,\n    endIndex: 0,\n  }\n\n  constructor(opts: VirtualizerOptions<TScrollElement, TItemElement>) {\n    this.setOptions(opts)\n    this.scrollRect = this.options.initialRect\n    this.scrollOffset = this.options.initialOffset\n\n    this.calculateRange()\n  }\n\n  setOptions = (opts: VirtualizerOptions<TScrollElement, TItemElement>) => {\n    Object.entries(opts).forEach(([key, value]) => {\n      if (typeof value === 'undefined') delete (opts as any)[key]\n    })\n\n    this.options = {\n      debug: false,\n      initialOffset: 0,\n      overscan: 1,\n      paddingStart: 0,\n      paddingEnd: 0,\n      scrollPaddingStart: 0,\n      scrollPaddingEnd: 0,\n      horizontal: false,\n      getItemKey: defaultKeyExtractor,\n      rangeExtractor: defaultRangeExtractor,\n      onChange: () => {},\n      measureElement,\n      initialRect: { width: 0, height: 0 },\n      scrollMargin: 0,\n      scrollingDelay: 150,\n      indexAttribute: 'data-index',\n      ...opts,\n    }\n  }\n\n  private notify = () => {\n    this.options.onChange?.(this)\n  }\n\n  private cleanup = () => {\n    this.unsubs.filter(Boolean).forEach((d) => d!())\n    this.unsubs = []\n    this.scrollElement = null\n  }\n\n  _didMount = () => {\n    const ro = this.getResizeObserver()\n    Object.values(this.measureElementCache).forEach((node) => ro?.observe(node))\n\n    return () => {\n      ro?.disconnect()\n\n      this.cleanup()\n    }\n  }\n\n  _willUpdate = () => {\n    this.pendingScrollToIndexCallback?.()\n\n    const scrollElement = this.options.getScrollElement()\n\n    if (this.scrollElement !== scrollElement) {\n      this.cleanup()\n\n      this.scrollElement = scrollElement\n\n      this._scrollToOffset(this.scrollOffset, {\n        adjustments: undefined,\n        behavior: undefined,\n        sync: true,\n      })\n\n      this.unsubs.push(\n        this.options.observeElementRect(this, (rect) => {\n          this.scrollRect = rect\n          this.calculateRange()\n        }),\n      )\n\n      this.unsubs.push(\n        this.options.observeElementOffset(this, (offset) => {\n          if (this.isScrollingTimeoutId !== null) {\n            clearTimeout(this.isScrollingTimeoutId)\n            this.isScrollingTimeoutId = null\n          }\n\n          const onIsScrollingChange = (isScrolling: boolean) => {\n            if (this.isScrolling !== isScrolling) {\n              this.isScrolling = isScrolling\n              this.notify()\n            }\n          }\n\n          this.scrollAdjustments = 0\n\n          if (this.scrollOffset !== offset) {\n            this.scrollOffset = offset\n            onIsScrollingChange(true)\n          }\n\n          this.calculateRange()\n\n          this.isScrollingTimeoutId = setTimeout(() => {\n            this.isScrollingTimeoutId = null\n            onIsScrollingChange(false)\n          }, this.options.scrollingDelay)\n        }),\n      )\n    } else if (!this.isScrolling) {\n      this.calculateRange()\n    }\n  }\n\n  private getSize = () => {\n    return this.scrollRect[this.options.horizontal ? 'width' : 'height']\n  }\n\n  private getMeasurements = memo(\n    () => [\n      this.options.count,\n      this.options.paddingStart,\n      this.options.getItemKey,\n      this.itemMeasurementsCache,\n    ],\n    (count, paddingStart, getItemKey, measurementsCache) => {\n      const min =\n        this.pendingMeasuredCacheIndexes.length > 0\n          ? Math.min(...this.pendingMeasuredCacheIndexes)\n          : 0\n      this.pendingMeasuredCacheIndexes = []\n\n      const measurements = this.measurementsCache.slice(0, min)\n\n      for (let i = min; i < count; i++) {\n        const key = getItemKey(i)\n        const measuredSize = measurementsCache[key]\n        const start = measurements[i - 1]\n          ? measurements[i - 1]!.end\n          : paddingStart\n        const size =\n          typeof measuredSize === 'number'\n            ? measuredSize\n            : this.options.estimateSize(i)\n        const end = start + size\n        measurements[i] = { index: i, start, size, end, key }\n      }\n\n      this.measurementsCache = measurements\n      return measurements\n    },\n    {\n      key: process.env.NODE_ENV !== 'production' && 'getMeasurements',\n      debug: () => this.options.debug,\n    },\n  )\n\n  calculateRange = memo(\n    () => [this.getMeasurements(), this.getSize(), this.scrollOffset],\n    (measurements, outerSize, scrollOffset) => {\n      const range = calculateRange({\n        measurements,\n        outerSize,\n        scrollOffset,\n      })\n      if (\n        range.startIndex !== this.range.startIndex ||\n        range.endIndex !== this.range.endIndex\n      ) {\n        this.range = range\n        this.notify()\n      }\n      return this.range\n    },\n    {\n      key: process.env.NODE_ENV !== 'production' && 'calculateRange',\n      debug: () => this.options.debug,\n    },\n  )\n\n  private getIndexes = memo(\n    () => [\n      this.options.rangeExtractor,\n      this.range,\n      this.options.overscan,\n      this.options.count,\n    ],\n    (rangeExtractor, range, overscan, count) => {\n      return rangeExtractor({\n        ...range,\n        overscan,\n        count: count,\n      })\n    },\n    {\n      key: process.env.NODE_ENV !== 'production' && 'getIndexes',\n      debug: () => this.options.debug,\n    },\n  )\n\n  indexFromElement = (node: TItemElement) => {\n    const attributeName = this.options.indexAttribute\n    const indexStr = node.getAttribute(attributeName)\n\n    if (!indexStr) {\n      console.warn(\n        `Missing attribute name '${attributeName}={index}' on measured element.`,\n      )\n      return -1\n    }\n\n    return parseInt(indexStr, 10)\n  }\n\n  private _measureElement = (node: TItemElement, _sync: boolean) => {\n    const index = this.indexFromElement(node)\n\n    const item = this.measurementsCache[index]\n    if (!item) {\n      return\n    }\n\n    const prevNode = this.measureElementCache[item.key]\n\n    const ro = this.getResizeObserver()\n\n    if (!node.isConnected) {\n      if (prevNode) {\n        ro?.unobserve(prevNode)\n        delete this.measureElementCache[item.key]\n      }\n      return\n    }\n\n    if (!prevNode || prevNode !== node) {\n      if (prevNode) {\n        ro?.unobserve(prevNode)\n      }\n      this.measureElementCache[item.key] = node\n      ro?.observe(node)\n    }\n\n    const measuredItemSize = this.options.measureElement(node, this)\n\n    const itemSize = this.itemMeasurementsCache[item.key] ?? item.size\n\n    const delta = measuredItemSize - itemSize\n\n    if (delta !== 0) {\n      if (item.start < this.scrollOffset && this.isScrolling) {\n        if (process.env.NODE_ENV !== 'production' && this.options.debug) {\n          console.info('correction', delta)\n        }\n\n        this._scrollToOffset(this.scrollOffset, {\n          adjustments: (this.scrollAdjustments += delta),\n          behavior: undefined,\n          sync: false,\n        })\n      }\n\n      this.pendingMeasuredCacheIndexes.push(index)\n      this.itemMeasurementsCache = {\n        ...this.itemMeasurementsCache,\n        [item.key]: measuredItemSize,\n      }\n      this.notify()\n    }\n  }\n\n  measureElement = (node: TItemElement | null) => {\n    if (!node) {\n      return\n    }\n\n    this._measureElement(node, true)\n  }\n\n  getVirtualItems = memo(\n    () => [this.getIndexes(), this.getMeasurements()],\n    (indexes, measurements) => {\n      const virtualItems: VirtualItem[] = []\n\n      for (let k = 0, len = indexes.length; k < len; k++) {\n        const i = indexes[k]!\n        const measurement = measurements[i]!\n\n        virtualItems.push(measurement)\n      }\n\n      return virtualItems\n    },\n    {\n      key: process.env.NODE_ENV !== 'production' && 'getIndexes',\n      debug: () => this.options.debug,\n    },\n  )\n\n  getOffsetForAlignment = (toOffset: number, align: ScrollAlignment) => {\n    const offset = this.scrollOffset\n    const size = this.getSize()\n\n    if (align === 'auto') {\n      if (toOffset <= offset) {\n        align = 'start'\n      } else if (toOffset >= offset + size) {\n        align = 'end'\n      } else {\n        align = 'start'\n      }\n    }\n\n    if (align === 'start') {\n      return toOffset\n    } else if (align === 'end') {\n      return toOffset - size\n    } else if (align === 'center') {\n      return toOffset - size / 2\n    }\n    return toOffset\n  }\n\n  scrollToOffset = (\n    toOffset: number,\n    { align = 'start', behavior }: ScrollToOffsetOptions = {},\n  ) => {\n    const options = {\n      adjustments: undefined,\n      behavior,\n      sync: false,\n    }\n    this._scrollToOffset(this.getOffsetForAlignment(toOffset, align), options)\n  }\n\n  scrollToIndex = (\n    index: number,\n    { align = 'auto', behavior }: ScrollToIndexOptions = {},\n  ) => {\n    this.pendingScrollToIndexCallback = null\n\n    const offset = this.scrollOffset\n    const size = this.getSize()\n    const { count } = this.options\n\n    const measurements = this.getMeasurements()\n    const measurement = measurements[Math.max(0, Math.min(index, count - 1))]\n\n    if (!measurement) {\n      throw new Error(`VirtualItem not found for index = ${index}`)\n    }\n\n    if (align === 'auto') {\n      if (measurement.end >= offset + size - this.options.scrollPaddingEnd) {\n        align = 'end'\n      } else if (\n        measurement.start <=\n        offset + this.options.scrollPaddingStart\n      ) {\n        align = 'start'\n      } else {\n        return\n      }\n    }\n\n    const getOffsetForIndexAndAlignment = (measurement: VirtualItem) => {\n      const toOffset =\n        align === 'end'\n          ? measurement.end + this.options.scrollPaddingEnd\n          : measurement.start - this.options.scrollPaddingStart\n\n      return this.getOffsetForAlignment(toOffset, align)\n    }\n\n    const toOffset = getOffsetForIndexAndAlignment(measurement)\n\n    if (toOffset === offset) {\n      return\n    }\n\n    const options = {\n      adjustments: undefined,\n      behavior,\n      sync: false,\n    }\n    this._scrollToOffset(toOffset, options)\n\n    const isDynamic = Object.keys(this.measureElementCache).length > 0\n\n    if (isDynamic) {\n      this.pendingScrollToIndexCallback = () => {\n        this.scrollToIndex(index, { align, behavior })\n      }\n    }\n  }\n\n  scrollBy = (adjustments: number, options?: { behavior: ScrollBehavior }) => {\n    this._scrollToOffset(this.scrollOffset, {\n      adjustments,\n      behavior: options?.behavior,\n      sync: false,\n    })\n  }\n\n  getTotalSize = () =>\n    (this.getMeasurements()[this.options.count - 1]?.end ||\n      this.options.paddingStart) + this.options.paddingEnd\n\n  private _scrollToOffset = (\n    offset: number,\n    {\n      adjustments,\n      behavior,\n      sync,\n    }: {\n      adjustments: number | undefined\n      behavior: ScrollBehavior | undefined\n      sync: boolean\n    },\n  ) => {\n    this.options.scrollToFn(offset, { behavior, sync, adjustments }, this)\n  }\n\n  measure = () => {\n    this.itemMeasurementsCache = {}\n    this.notify()\n  }\n}\n\nconst findNearestBinarySearch = (\n  low: number,\n  high: number,\n  getCurrentValue: (i: number) => number,\n  value: number,\n) => {\n  while (low <= high) {\n    const middle = ((low + high) / 2) | 0\n    const currentValue = getCurrentValue(middle)\n\n    if (currentValue < value) {\n      low = middle + 1\n    } else if (currentValue > value) {\n      high = middle - 1\n    } else {\n      return middle\n    }\n  }\n\n  if (low > 0) {\n    return low - 1\n  } else {\n    return 0\n  }\n}\n\nfunction calculateRange({\n  measurements,\n  outerSize,\n  scrollOffset,\n}: {\n  measurements: VirtualItem[]\n  outerSize: number\n  scrollOffset: number\n}) {\n  const count = measurements.length - 1\n  const getOffset = (index: number) => measurements[index]!.start\n\n  const startIndex = findNearestBinarySearch(0, count, getOffset, scrollOffset)\n  let endIndex = startIndex\n\n  while (\n    endIndex < count &&\n    measurements[endIndex]!.end < scrollOffset + outerSize\n  ) {\n    endIndex++\n  }\n\n  return { startIndex, endIndex }\n}\n"],"names":["memo","getDeps","fn","opts","deps","result","depTime","key","debug","Date","now","newDeps","depsChanged","length","some","dep","index","resultTime","onChange","depEndTime","Math","round","resultEndTime","resultFpsPercentage","pad","str","num","String","console","info","max","min","defaultKeyExtractor","defaultRangeExtractor","range","start","startIndex","overscan","end","endIndex","count","arr","i","push","memoRectCallback","instance","cb","prev","height","width","rect","options","horizontal","observeElementRect","observer","ResizeObserver","entries","contentRect","scrollElement","getBoundingClientRect","observe","unobserve","observeWindowRect","memoizedCallback","onResize","innerWidth","innerHeight","addEventListener","capture","passive","removeEventListener","scrollProps","element","window","createOffsetObserver","mode","propX","propY","prevX","prevY","scroll","offset","scrollMargin","onScroll","e","target","currentTarget","scrollX","scrollY","observeElementOffset","observeWindowOffset","measureElement","windowScroll","adjustments","behavior","sync","toOffset","scrollTo","elementScroll","Virtualizer","unsubs","isScrolling","isScrollingTimeoutId","measurementsCache","itemMeasurementsCache","pendingMeasuredCacheIndexes","scrollAdjustments","measureElementCache","pendingScrollToIndexCallback","getResizeObserver","_ro","forEach","entry","_measureElement","setOptions","Object","value","initialOffset","paddingStart","paddingEnd","scrollPaddingStart","scrollPaddingEnd","getItemKey","rangeExtractor","initialRect","scrollingDelay","indexAttribute","notify","cleanup","filter","Boolean","d","_didMount","ro","values","node","disconnect","_willUpdate","getScrollElement","_scrollToOffset","scrollOffset","undefined","scrollRect","calculateRange","clearTimeout","onIsScrollingChange","setTimeout","getSize","getMeasurements","measurements","slice","measuredSize","size","estimateSize","outerSize","getIndexes","indexFromElement","attributeName","indexStr","getAttribute","warn","parseInt","_sync","item","prevNode","isConnected","measuredItemSize","itemSize","delta","getVirtualItems","indexes","virtualItems","k","len","measurement","getOffsetForAlignment","align","scrollToOffset","scrollToIndex","Error","getOffsetForIndexAndAlignment","isDynamic","keys","scrollBy","getTotalSize","scrollToFn","measure","findNearestBinarySearch","low","high","getCurrentValue","middle","currentValue","getOffset"],"mappings":"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"}